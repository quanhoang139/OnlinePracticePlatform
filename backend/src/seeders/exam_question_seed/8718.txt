[
    {
        "title": "Câu 1: Các điểm ảnh ",
        "point": 6.0,
        "content": "Trong máy tính, một bức ảnh được mã hóa thành các điểm ảnh, mỗi điểm ảnh được biểu thị bởi một màu, mỗi màu được quy định bằng một mã màu, mã màu là một số nguyên dương nằm trong dãy từ %(1)% đến %(10^{6})%.<br><strong>Yêu cầu:</strong> Cho trước một bức ảnh được mã hóa thành %(\\mathbf{n})% điểm ảnh và mã màu của từng điểm ảnh.<br>a) Hãy cho biết có bao nhiêu mã màu khác nhau xuất hiện trong bức ảnh.<br>b) Số lượng điểm ảnh có mã màu giống nhau nhiều nhất là bao nhiêu?<br><strong>Dữ liệu vào:</strong> Cho từ tệp văn bản PIXEL.INP gồm hai dòng:<br>- Dòng thứ nhất ghi số nguyên dương %(\\mathbf{n}\\left(1 \\leq \\mathrm{n} \\leq 10^{6}\\right))%<br>- Dòng thứ hai ghi %(\\mathbf{n})% số nguyên dương %(\\mathrm{a}_{1}, \\mathrm{a}_{2}, \\ldots, \\mathrm{a}_{\\mathrm{n}})% với %(\\mathrm{a}_{\\mathbf{i}})% là mã màu của điểm ảnh thứ %(\\mathrm{i}\\left(1 \\leq \\mathrm{a}_{\\mathrm{i}} \\leq 10^{6} ; \\mathrm{i}=1 . . \\mathrm{n}\\right))%<br>Các số ghi trên cùng một dòng cách nhau một kí tự trắng.<br><strong>Kết quả:</strong> Ghi ra tệp văn bản PIXEL.OUT gồm hai dòng:<br>- Dòng thứ nhất ghi một số nguyên là số lượng mã màu khác nhau xuất hiện trong bức ảnh.<br>- Dòng thứ hai ghi số nguyên là số lượng điểm ảnh có mã màu giống nhau nhiều nhất.<br><strong>Ví dụ:</strong>",
        "question_images": [
            "https://docdn.giainhanh.io/media/test/6a5c3443dc1c88595dee535e1c3f4cd3.png"
        ],
        "solution": "Hướng dẫn thuật toán: Sử dụng thuật toán đánh dấu.<br>Gọi %(a[i])% là số lượng điểm ảnh có số hiệu màu là %(i)%%(\\left(\\mathrm{i}=1 . .10^{6}\\right))%.<br>Số các màu khác nhau có trong bức ảnh bằng số phần tử khác %(0)% của mảng %(\\mathrm{a})%.<br>Số điểm ảnh nhiều nhất có cùng màu bằng giá trị lớn nhất của dãy %(\\mathrm{a})%.<br>Độ phức tạp thuật toán %(\\mathrm{O}(\\mathrm{m}))% với %(\\mathrm{m})% là số hiệu màu lớn nhất có trong bức ảnh %(\\left(\\mathrm{m}\\lt =10^{6}\\right))%<br>Bộ test: Gồm 6 bộ test, mỗi bộ test có hai yêu cầu, mỗi yêu cầu %(0,5)% điểm<br>Program Pixel;<br>Const fi='PIXEL.INP';<br>fo='PIXEL.OUT';<br>nmax=Trunc(1e6);<br>Var a: array[1..nmax] of LongInt;<br>i, x, d, n, max: LongInt;<br>f, g: text;<br>Begin<br>Assign(f, fi);<br>Assign(g, fo);<br>Reset(f);<br>Rewrite(g);<br>Readln(f, n);<br>For i:=1 to n do<br>Begin<br>Read(f, x);<br>a[x]:=a[x]+1;<br>End;<br>For i:=1 to nmax do<br>If a[i]%(<>)%0 then d:=d+1;<br>Max:=-1;<br>For i:=1 to nmax do<br>If a[i]> max then max:=a[i];<br>Writeln(g, d);<br>Writeln(g, max);<br>Close(f);<br>Close(g);<br>End.<br><img alt=\"image.png\" sizes=\"100vw\" src=\"https://docdn.giainhanh.io/media/test/9464a49c7b28f38c094fd923edb4b9a0.png\" srcset=\"https://docdn.giainhanh.io/media/test/cbdd8e36f2200234531818ca2cc6bed3.png 245w, https://docdn.giainhanh.io/media/test/dd4e51a6b3733086e14ef4c7b551b6e7.png 500w\" width=\"500\"/>",
        "question_type": "essay"
    },
    {
        "title": "Câu 2: Các hộp sữa ",
        "point": 7.0,
        "content": "Một cửa hàng bán sữa hiện có %(\\mathbf{n})% hộp sữa trong kho. Mỗi ngày cửa hàng phải đem giao %(\\mathbf{k})% hộp sữa cho khách hàng nếu trong kho còn từ %(\\mathbf{k})% hộp trở lên, và nếu còn ít hơn thì sẽ giao hết các hộp sữa. Nhưng có một vấn đề với các hộp sữa là ngày hết hạn của chúng. Mỗi hộp sữa có một ngày hết hạn mà sau ngày đó thì hộp sữa không thể dùng được và phải bỏ đi. Cửa hàng không muốn những hộp sữa bị quá hạn, vì thế khi giao một hộp sữa cho khách hàng, cửa hàng sẽ chọn hộp sữa có hạn sử dụng còn ít hơn để giao trước. Chiến lược này sẽ giúp cửa hàng hạn chế tối đa các hộp sữa không giao kịp và bị quá hạn.<br>Biết rằng, cửa hàng đã biết hạn sử dụng của mỗi hộp sữa. Hạn sử dụng được thể hiện bằng một con số cho biết số ngày còn lại mà hộp sữa còn dùng được. Chẳng hạn, hạn sử dụng là 1 cho biết hộp sữa phải giao trong ngày hôm nay, số 2 là không thể để trễ hơn ngày mai, ...<br><strong>Yêu cầu:</strong><br>a) Hãy cho biết có ít nhất bao nhiêu hộp sữa bị quá hạn sử dụng phải bỏ đi vì cửa hàng không giao kịp.<br>b) Để các hộp sữa không bị quá hạn sử dụng thì mỗi ngày cửa hàng cần phải giao được ít nhất bao nhiêu hộp sữa?<br><strong>Dữ liệu vào:</strong> Cho từ tệp văn bản MILK.INP gồm hai dòng:<br>- Dòng thứ nhất ghi hai số nguyên dương %(\\mathbf{n}, \\mathbf{k})% là số hộp sữa hiện có và số hộp sữa mà cửa hàng phải giao mỗi ngày %(\\left(1 \\leq \\mathrm{k}, \\mathrm{n} \\leq 10^{6}\\right))%.<br>- Dòng thứ hai ghi %(\\mathbf{n})% số nguyên dương %(\\mathbf{a}_{1}, \\mathbf{a}_{2}, \\ldots, \\mathbf{a}_{\\mathbf{n}})% trong đó %(\\mathbf{a}_{\\mathbf{i}})% là hạn sử dụng của hộp sữa thứ %(i\\left(0\\lt a_{i} \\leq 10^{7}, i=1 . . n\\right))%.<br>Các số ghi trên cùng một dòng cách nhau một kí tự trắng.<br><strong>Kết quả:</strong> Ghi ra tệp văn bản MILK.OUT gồm hai dòng:<br>- Dòng thứ nhất ghi số hộp sữa bị quá hạn sử dụng ít nhất nếu mỗi ngày cửa hàng giao được %(\\mathrm{k})% hộp sữa.<br>- Dòng thứ hai ghi số hộp sữa ít nhất mà mỗi ngày cửa hàng cần phải giao được để không có hộp sữa nào bị quá hạn sử dụng.<br><strong>Giải thích cho ví dụ:</strong> Ngày thứ nhất (hôm nay) giao hai hộp sữa thứ 2 và thứ 3 vì hết hạn trong ngày, ngày thứ hai giao hộp sữa thứ 1 và thứ 4 , ngày thứ ba chỉ giao một hộp thứ 5 và phải bỏ hộp sữa thứ 6 đã hết hạn sử dụng. Để các hộp sữa không bị quá hạn sử dụng thì mỗi ngày cửa hàng cần phải giao được ít nhất 3 hộp sữa.<br><strong>Ví dụ:</strong>",
        "question_images": [
            "https://docdn.giainhanh.io/media/test/e92283ad72ff52549b5abbd221fa0979.png"
        ],
        "solution": "Hướng dẫn thuật toán: Sắp xếp các hộp sữa theo thứ tự ngày hết hạn tăng dần bằng thuật toán sắp xếp nhanh, độ phức tạp %(\\mathrm{O})% %((n\\log n))%.<br>Yêu cầu 1: Duyệt mảng %(a)% từ đầu đến cuối, nếu hộp sữa thứ %(i)% chưa hết hạn thì sử dụng hộp sữa này, nếu đã giao đủ %(k)% hộp sữa trong ngày thì tăng lên ngày tiếp theo. Nếu hộp sữa thứ %(i)% đã hết hạn thì tăng biến đếm lên %(1)%. Độ phức tạp %(\\mathrm{O}(\\mathrm{n}))%.<br>Yêu cầu 2: Sử dụng tìm kiếm nhị phân để tìm giá trị %(\\mathrm{k})% nhỏ nhất, độ phức tạp %(\\mathrm{O}(\\log n))%. Với mỗi lần lặp ta xét giá trị \"giữa\" và kiểm tra xem có hộp sữa nào hết hạn hay không (kiểm tra giống yêu cầu 1). Độ phức tạp chung %(\\mathrm{O})% %((n\\log n).)%<br>Bộ test: Gồm 10 bộ test, mỗi bộ test có hai yêu cầu, yêu cầu %()%%(a)% được %(0,4)% điểm và yêu cầu %(b)% được %(0,3)% điểm.<br>Program MILK;<br>Const fin ='MILK.INP';<br>fout='MILK.OUT';<br>Var a:Array[1..1000000] of Longint;<br>n,k,i,dau,giua,cuoi:Longint;<br>f:Text;<br>Procedure QuickSort(L,R:Longint);<br>Var i,j,v,t:Longint;<br>Begin<br>i:=L;<br>j:=R;<br>v:=a[(L+R) div 2];<br>Repeat<br>While a[i]%(<)% v do i:=i+1;<br>While v%(<)% a[j] do j:=j-1;<br>If i%(<)%=j then<br>Begin<br>t:=a[i];<br>a[i]:=a[j];<br>a[j]:=t;<br>i:=i+1;<br>j:=j-1;<br>End;<br>Until i%(>)%j;<br>If i%(<)%R then QuickSort(i,R);<br>If L%(<)% j then QuickSort(L,j);<br>End;<br>Function Check(K:Longint):Longint;<br>Var i,S,C,d:Longint;<br>Begin<br>C:=0;<br>S:=0;<br>d:=1; //ngay dau tien<br>For i:=1 to n do<br>Begin<br>If a[i]%(>=)%d then S:=S+1<br>Else C:=C+1; //Hop sua i het han<br>If  S=k then<br>Begin<br>S:=0;<br>d:=d+1; //Sang ngay hom sau<br>End;<br>End;<br>Check:=C;<br>End;<br>Begin<br>Assign(f,fin);<br>Reset(f);<br>Readln(f,n,k);<br>For i:=1 to n do Read(f,a[i]);<br>Close(f);<br>QuickSort(1,n);<br>Assign(f,fout);<br>ReWrite(f);<br>Writeln(f,Check(k));<br>dau:=0;<br>cuoi:=n;<br>While dau+1 %(<)% cuoi do<br>Begin<br>giua:=(dau+cuoi) div 2;<br>If Check(giua)=0 then cuoi:=giua<br>Else dau:=giua;<br>End;<br>Write(f,cuoi);<br>Close(f);<br>End.<br><img alt=\"image.png\" sizes=\"100vw\" src=\"https://docdn.giainhanh.io/media/test/328e6120eeae122657ecfc5d708c39b2.png\" srcset=\"https://docdn.giainhanh.io/media/test/f9ee83b8858c24fea4fdeeea4f9a2393.png 168w, https://docdn.giainhanh.io/media/test/7e6f61a9d62b052d170dae1577705cc0.png 500w, https://docdn.giainhanh.io/media/test/77af3f19797246a096675462980c0ef4.png 750w\" width=\"750\"/>",
        "question_type": "essay"
    },
    {
        "title": "Câu 3: Gấp giấy ",
        "point": 7.0,
        "content": "Trong một buổi sinh hoạt ngoại khóa, để tăng thêm phần hào hứng, ban tổ chức đã đưa ra trò chơi gấp giấy. Trò chơi bao gồm một tờ giấy hình vuông kích thước %(\\mathbf{n}\\times\\mathbf{n})% được kẻ thành lưới các ô vuông đơn vị, mỗi ô vuông được ban tổ chức ghi sẵn một trong hai số %(0)% hoặc %(1)%. Mỗi người tham gia trò chơi được ban tổ chức yêu cầu gấp tờ giấy một lần theo đường kẻ ngang và một lần theo đường kẻ dọc. Theo nếp gấp đó sẽ chia tờ giấy thành 4 phần. Người thắng cuộc là người tìm được cách gấp tờ giấy mà phần có ít số %(1)% nhất (trong 4 phần của tờ giấy sau khi gấp) là nhiều nhất so với các cách gấp khác.<br><strong>Yêu cầu:</strong> Bạn hãy tìm một cách gấp giấy thỏa mãn yêu cầu của ban tổ chức sao cho bạn là người thắng cuộc.<br><strong>Dữ liệu vào:</strong> Cho từ tệp văn bản GAPGIAY.INP có dạng:<br>- Dòng thứ nhất ghi số nguyên dương %(\\mathbf{n}(2 \\leq \\mathrm{n} \\leq 250))%<br>- Tiếp theo là %(\\mathbf{n})% dòng, mỗi dòng ghi %(\\mathbf{n})% số: số %(0)% hoặc số %(1)%, tương ứng với các số được ghi trên tờ giấy.<br>Các số ghi trên cùng một dòng cách nhau một kí tự trắng.<br><strong>Kết quả:</strong> Ghi vào tệp văn bản GAPGIAY.OUT gồm một dòng ghi một số nguyên là số lượng số %(1)% trên phần giấy có ít số %(1)% nhất của cách gấp tìm được.<br><strong>Ví dụ:</strong>",
        "question_images": [
            "https://docdn.giainhanh.io/media/test/16e6b7ea42099096b6862e3ffab6c278.png"
        ],
        "solution": "Hướng dẫn thuật toán: Sử dụng thuật toán quy hoạch động<br>Gọi %(\\mathrm{A}[\\mathrm{i}, \\mathrm{j}])% là tổng số ô vuông có số %(1)% của phần giấy từ dòng %(1)% đến dòng %(i)%, cột %(1)% đến cột %(j)%. Ta có công thức truy hồi :<br>%(\\mathrm{A}[\\mathrm{i}, \\mathrm{j}]=\\mathrm{A}[\\mathrm{i}-1, \\mathrm{j}]+\\mathrm{A}[\\mathrm{i}, \\mathrm{j}-1]-\\mathrm{A}[\\mathrm{i}-1, \\mathrm{j}-1]+\\mathrm{x})% với %(x=1)% nếu ô %((i,j))% có số %(1)%, bằng %(0)% nếu không có<br>Dùng 2 vòng lặp duyệt mảng tìm vị trí gấp giấy, mỗi vị trí tìm phần giấy có ít số 1 nhất và chọn ra phương án tối ưu.<br>Độ phức tạp thuật toán %(\\mathrm{O}\\left(\\mathrm{n}^{2}\\right))%.<br>Bộ test: Gồm 10 bộ test, mỗi bộ test %(0,7)% điểm<br><strong>Bài làm tham khảo:</strong><br>Program GAPGIAY;<br>const<br>fi='Gapgiay.inp';<br>fo='Gapgiay.out';<br>maxN=251;<br>type mang1=array[0..maxN,0..maxN] of longint;<br>var<br>f, g: text;<br>a,b: mang1;<br>N: integer;<br>max: integer;<br>i, j: integer;<br>procedure Nhap;<br>var i,j: integer;<br>begin<br>assign(f,fi);<br>reset(f);<br>readln(f,N);<br>for i:=1 to n do<br>for j:=1 to n do<br>read(f,b[i,j]);<br>close(f);<br>end;<br>procedure qhd;<br>var u,v,k, i, j: integer;<br>t: array[1..4] of longint;<br>m: integer;<br>begin<br>for i:=1 to n do a[1,i]:=a[1,i-1]+b[1,i];<br>for i:=1 to n do a[i,1]:=a[i-1,1]+b[i,1];<br>for i:=2 to n do<br>for j:=2 to n do a[i;j]:=a[i;j-1]+a[i-1;j]-a[i-1,j-1]+b[i,j];<br>Max:=-1;<br>for u:=1 to n do for v:=1 to n do<br>begin<br>t[1]:=a[u,v];<br>t[2]:=a[u,n]-a[u,v];<br>t[3]:=a[n,v]-a[u,v];<br>t[4]:=a[n,n]-t[1]-t[2]-t[3];<br>m:=t[1];<br>for k:=2 to 4 do<br>if m%(>)%=t[k] then m:=t[k];<br>if m>=max then max:=m;<br>end;<br>end;<br>BEGIN<br>Nhap;<br>Qhd;<br>assign(g,fo); rewrite(g);<br>writeln(g,max);<br>close(g);<br>END.<br><img alt=\"image.png\" sizes=\"100vw\" src=\"https://docdn.giainhanh.io/media/test/6334401642d04f69c58ab61a63b4e7ac.png\" srcset=\"https://docdn.giainhanh.io/media/test/fa6ff642e98c2837fa74e57bfaad0e8a.png 245w, https://docdn.giainhanh.io/media/test/6a4b11ddd01f804501d74e8c036cb611.png 500w\" width=\"500\"/>",
        "question_type": "essay"
    }
]